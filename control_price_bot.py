from aiogram import Bot, Dispatcher, executor, types
import logging

import os


import bot_functions 

logging.basicConfig(level=logging.INFO)

TOKEN  = os.getenv('PRICE_CONTROL_BOT_TOKEN')
bot = Bot(TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def send_hello(message: types.Message):
    await message.answer('–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤–∫–ª—é—á–∏–ª –º–µ–Ω—è')


@dp.message_handler(commands=['check_client_price'])
async def check_price(message: types.Message):
    await message.answer('üïì –Ø –Ω–∞—á–∞–ª —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Ü–µ–Ω—ã. –ü–æ–¥–æ–∂–¥–∏—Ç–µ...')
    
    spread = bot_functions.auth_spread()
    worksheets = spread.worksheets()[:3]
    for sheet in worksheets:
        wrong_data = bot_functions.get_worksheet_order_info(sheet)
        await message.answer(f'üëá –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ "{sheet.title}"')
        if wrong_data == []:
            await message.answer('üòå –°–æ–≤–ø–∞–¥–∞—é—Ç –≤—Å–µ —Ü–µ–Ω—ã')
            continue

        for item in wrong_data:
            notification = f'‚ùóÔ∏è–ù–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Ü–µ–Ω–∞\n–ê—Ä—Ç–∏–∫—É–ª: {item["article"]}\n–¶–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ: {item["price"]}\n–¶–µ–Ω–∞ WB: {item["wb_price"]}\n–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: {item["url"]}'
            await message.answer(notification)

    await message.answer('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å')
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)   